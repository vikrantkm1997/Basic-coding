class Solution {
public:
    int vis[300][300]={0};
    int count=0;
    int dx[4]={0,1,0,-1};
    int dy[4]={-1,0,1,0};
    bool isValid(int x,int y,vector<vector<char>>& grid)
    {
        int n=grid.size();
        int m=grid[0].size();
        if(x<0||x>n-1||y<0||y>m-1)
            return false;
        if(vis[x][y]==1)
            return false;
        return true;
    }
    void dfs(int curx,int cury,vector<vector<char>>& grid)
    {
        vis[curx][cury]=1;
        for(int i=0;i<4;i++)
        {
        if(isValid(curx+dx[i],cury+dy[i],grid)==true && grid[curx+dx[i]][cury+dy[i]]=='1')
        {
                dfs(curx+dx[i],cury+dy[i],grid);
        }
        }
    }
    int numIslands(vector<vector<char>>& grid) {
    int n=grid.size();
    int m=grid[0].size();
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(vis[i][j]==0&&grid[i][j]=='1')
            {
                count++;
                dfs(i,j,grid);
            }
        }
    }
        return count;
    }
};
